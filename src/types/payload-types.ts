/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    media: Media;
    icons: Icon;
    'og-images': OgImage;
    allergens: Allergen;
    groups: Group;
    collections: Collection;
    'groups-heroes-images': GroupsHeroesImage;
    news: News;
    orders: Order;
    'discounts-codes': DiscountsCode;
    products: Product;
    'products-cards-images': ProductsCardsImage;
    'products-heroes-images': ProductsHeroesImage;
    'delivery-zones': DeliveryZone;
    'discount-strategies': DiscountStrategy;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    'global-settings': GlobalSetting;
    'home-page': HomePage;
    'delivery-page': DeliveryPage;
    'about-page': AboutPage;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  roles?: ('admin' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "icons".
 */
export interface Icon {
  id: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "og-images".
 */
export interface OgImage {
  id: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "allergens".
 */
export interface Allergen {
  id: string;
  icon: string | Media;
  name: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "groups".
 */
export interface Group {
  id: string;
  slug: string;
  name: string;
  nameSyrve?: string | null;
  parentGroup?: string | null;
  syrveData:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  heroImage?: string | GroupsHeroesImage | null;
  hidden: boolean;
  meta?: MetaData;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "groups-heroes-images".
 */
export interface GroupsHeroesImage {
  id: string;
  alt?: string | null;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    mobile?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    desktop?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MetaData".
 */
export interface MetaData {
  title?: string | null;
  description?: string | null;
  image?: string | OgImage | null;
  jsonld?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "collections".
 */
export interface Collection {
  id: string;
  name: string;
  slug?: string | null;
  editSlug?: boolean | null;
  heroImage?: string | GroupsHeroesImage | null;
  hidden: boolean;
  products?: (string | Product)[] | null;
  children?: (string | Collection)[] | null;
  meta?: MetaData;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  syrveData:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  slug: string;
  nameSyrve?: string | null;
  parentGroup?: (string | null) | Group;
  price?: number | null;
  name: string;
  cardImage?: string | ProductsCardsImage | null;
  quantity?: string | null;
  composition?: string | null;
  allergens?: (string | Allergen)[] | null;
  spicy: boolean;
  vegan: boolean;
  aviabilityHours?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  availableOnlyForSpecifiedDays?: boolean | null;
  aviabilityDays?: string[] | null;
  hidden: boolean;
  heroImage?: string | ProductsHeroesImage | null;
  description?: string | null;
  content?: {
    sliderBlockRecommended?: (string | Product)[] | null;
    blocks?:
      | {
          title: string;
          products: (string | Product)[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'products-slider-block';
        }[]
      | null;
  };
  meta?: MetaData;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products-cards-images".
 */
export interface ProductsCardsImage {
  id: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products-heroes-images".
 */
export interface ProductsHeroesImage {
  id: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    mobile?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    desktop?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news".
 */
export interface News {
  id: string;
  slug: string;
  title: string;
  coverImgDesktop: string | Media;
  coverImgMobile: string | Media;
  date: string;
  content: {
    [k: string]: unknown;
  }[];
  meta?: MetaData;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  orderId?: string | null;
  customer: {
    name: string;
    phone: string;
  };
  delivery: {
    type: 'self' | 'delivery';
    street?: string | null;
    streetName?: string | null;
    streetId?: string | null;
    postcode?: string | null;
    house?: string | null;
    flat?: string | null;
    floor?: string | null;
    date?: string | null;
    time?: string | null;
  };
  payment: {
    type: 'cash' | 'terminal' | 'online';
    status: 'pending' | 'paid' | 'canceled';
    link?: string | null;
    transactionData?: string | null;
  };
  comment?: string | null;
  cartLines: {
    product: string | Product;
    quantity: number;
    price: number;
    id?: string | null;
  }[];
  guestsCount: number;
  discountMoney: number;
  discountCode?: string | null;
  discountID?: string | null;
  discountPercent: number;
  cartPrice: number;
  cartPriceWithDiscount: number;
  deliveryPrice: number;
  deliveryZone?: string | null;
  deliveryZoneID?: string | null;
  totalWithDelivery: number;
  payuOrderId?: string | null;
  discountStrategiesApplied?: (string | DiscountStrategy)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discount-strategies".
 */
export interface DiscountStrategy {
  id: string;
  type: 'AMOUNT_OFF_ORDER' | 'AMOUNT_OFF_PRODUCTS' | 'BUY_X_GET_Y' | 'FREE_DELIVERY';
  method: 'CODE' | 'AUTOMATIC';
  discountCode?: string | null;
  title?: string | null;
  discountValue?: {
    discountValueType?: ('PERCENTAGE' | 'FIXED_AMOUNT') | null;
    discountValue?: number | null;
    appliesToType?: ('PRODUCTS' | 'COLLECTIONS') | null;
    appliesTo?:
      | (
          | {
              relationTo: 'products';
              value: string | Product;
            }
          | {
              relationTo: 'groups';
              value: string | Group;
            }
        )[]
      | null;
    onlyAppliesOncePerOrder?: boolean | null;
  };
  minimumPurchaseRequirements?: ('NONE' | 'AMOUNT' | 'QUANTITY') | null;
  minimumPurchaseRequirementsValue?: number | null;
  deliveryType?: ('PICKUP' | 'DELIVERY_BY_COURIER') | null;
  customerBuysX?: {
    xType?:
      | ('totalQuantity' | 'totalPrice' | 'totalQuantityOfSpecificProducts' | 'totalPriceOfSpecificProducts')
      | null;
    xValue?: number | null;
    xProducts?:
      | {
          relationTo: 'products';
          value: string | Product;
        }[]
      | null;
  };
  customerGetsY?: {
    quantity?: number | null;
    yProduct?: (string | null) | Product;
    atDiscountedValue?: ('PERCENTAGE' | 'FREE') | null;
    discountedValue?: number | null;
  };
  used?: number | null;
  combinations?: (string | DiscountStrategy)[] | null;
  oneUsePerCustomerEnabled?: boolean | null;
  active?: boolean | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discounts-codes".
 */
export interface DiscountsCode {
  id: string;
  name: string;
  percent: number;
  code: string;
  internal?: boolean | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "delivery-zones".
 */
export interface DeliveryZone {
  id: string;
  name: string;
  nameInSyrve: string;
  description?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  price: number;
  coordinates:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  colour?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-settings".
 */
export interface GlobalSetting {
  id: string;
  siteName: string;
  drinksCategory: string | Group;
  temporaryClosed?: boolean | null;
  temporaryClosedMessage?: string | null;
  workingHours?: {
    monday?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    tuesday?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    wednesday?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    thursday?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    friday?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    saturday?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    sunday?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  delivery: {
    minOrderPrice: number;
    freeDeliveryPrice: number;
    selfDeliveryDiscount: number;
    customDeliveryDays?: string[] | null;
  };
  phone?:
    | {
        number: string;
        id?: string | null;
      }[]
    | null;
  facebookLink?: string | null;
  instagramLink?: string | null;
  address?: string | null;
  modalPromotion: {
    title: {
      [k: string]: unknown;
    }[];
    description: {
      [k: string]: unknown;
    }[];
    cta: {
      text: string;
      link: string;
    };
    declineText?: string | null;
    backgroundImage: string | Media;
    isActive?: boolean | null;
  };
  lastSyncRevision?: string | null;
  sidebar: {
    items: {
      group: string | Collection;
      icon: string | Icon;
      id?: string | null;
    }[];
  };
  seo?: {
    jsonld?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page".
 */
export interface HomePage {
  id: string;
  blocks?:
    | (
        | {
            group: string | Group;
            products?: (string | Product)[] | null;
            headerBackgroundImage?: {
              desktop?: string | Media | null;
              mobile?: string | Media | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'group-presentation-block';
          }
        | {
            showLastNews: boolean;
            news?: (string | News)[] | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'news-slider-block';
          }
        | {
            content: {
              [k: string]: unknown;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'textblock';
          }
      )[]
    | null;
  meta?: MetaData;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "delivery-page".
 */
export interface DeliveryPage {
  id: string;
  zones: {
    color: string;
    description: string;
    id?: string | null;
  }[];
  meta?: MetaData;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-page".
 */
export interface AboutPage {
  id: string;
  meta?: MetaData;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}